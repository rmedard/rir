<?php

use Drupal\Core\Render\Markup;
use Drupal\node\Entity\Node;

/**
 * @file
 * Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */

function rir_preprocess_menu(&$variables) {

    $variables['is_mobile'] = isMobile();

    if ($variables['menu_name'] === 'adverts-secondary-menu') {
        $rent_all = \Drupal::entityQuery('node')
          ->condition('type', 'advert')
          ->condition('status', Node::PUBLISHED)
          ->count();
        $rent_all_count = $rent_all->execute();

        $house = \Drupal::entityQuery('node')
          ->condition('type', 'advert')
          ->condition('status', Node::PUBLISHED)
          ->condition('field_advert_property_type', ['house', 'building'], 'IN')
          ->count();
        $house_count = $house->execute();

        $apart = \Drupal::entityQuery('node')
          ->condition('type', 'advert')
          ->condition('status', Node::PUBLISHED)
          ->condition('field_advert_property_type', 'apartment')
          ->count();
        $apart_count = $apart->execute();

        $commerce = \Drupal::entityQuery('node')
          ->condition('type', 'advert')
          ->condition('status', Node::PUBLISHED)
          ->condition('field_advert_property_type', 'commerce')
          ->count();
        $commerce_count = $commerce->execute();

        $room = \Drupal::entityQuery('node')
          ->condition('type', 'advert')
          ->condition('status', Node::PUBLISHED)
          ->condition('field_advert_property_type', [
            'room',
            'shared_room',
          ], 'IN')
          ->count();
        $room_count = $room->execute();

        $office = \Drupal::entityQuery('node')
          ->condition('type', 'advert')
          ->condition('status', Node::PUBLISHED)
          ->condition('field_advert_property_type', 'office')
          ->count();
        $office_count = $office->execute();

        $land = \Drupal::entityQuery('node')
          ->condition('type', 'advert')
          ->condition('status', Node::PUBLISHED)
          ->condition('field_advert_property_type', 'land')
          ->count();
        $land_count = $land->execute();

        $menu_adverts_tabs_values = [
          1 => $rent_all_count,
          2 => $house_count,
          3 => $apart_count,
          4 => $commerce_count,
          5 => $room_count,
          6 => $office_count,
          7 => $land_count,
        ];
        $variables['menu_adverts_tabs_values'] = $menu_adverts_tabs_values;
    }
}

function isMobile() {
    $detail = \Drupal::service('browscap')->getBrowser();
    $browser_data = implode(',', $detail);
    $mobile = preg_match('(Mobile)', $browser_data);
    $android = preg_match('(Android)', $browser_data);
    $iphone = preg_match('(IOS)', $browser_data);
    if ($mobile or $android or $iphone) {
        return TRUE;
    }
    return FALSE;
}

function rir_preprocess_page(&$variables) {
    $page_path = \Drupal::request()->getPathInfo();
    $variables['show_sidebars'] = TRUE;
    $variables['show_rir_search'] = FALSE;
    $variables['management_page'] = FALSE;

    $variables['is_mobile'] = isMobile();

    if (preg_match('(/pricing-plans)', $page_path) or preg_match('(/page/services)', $page_path)
      or preg_match('(\/manage\/)', $page_path) or preg_match('(\/error\/)', $page_path)) {
        $variables['show_sidebars'] = FALSE;
        if (preg_match('(\/manage\/)', $page_path)){
            $variables['management_page'] = TRUE;
        }
    }

    if (preg_match('(\/adverts\/)', $page_path) or preg_match('(/search-adverts)', $page_path) or Drupal::service('path.matcher')
        ->isFrontPage()) {
        $variables['show_rir_search'] = TRUE;
    }

}

function rir_preprocess_block(&$variables){
  if ($variables['derivative_plugin_id'] == 'rir_realtime_block'){
    $variables['#cache']['max-age'] = 0;
  }
}

function rir_preprocess_views_view_field(&$variables){
    $view = $variables['view'];
    $field = $variables['field'];

    if ($view->storage->id() === 'details_requests' and $view->current_display == 'page_manage_details_requests' and $field->realField === 'entity_id'){
        $advert_id = intval($field->getValue($variables['row']));
        if (isset($advert_id)){
            $advert = Node::load($advert_id);
            if (isset($advert)){
                $advert_url = '/advert/' . $advert->get('field_advert_reference')->value;
                $variables['output'] = Markup::create('<a href="'. $advert_url .'"> ' . $advert->getTitle() . '</a>');
            }
        }
    }

    if ($view->storage->id() === 'adverts' and $view->current_display == 'page_manage_adverts' and $field->realField === 'nid'){
        $advert_id = intval($field->getValue($variables['row']));
        $variables['output'] = Markup::create(getSimilarAdverts($advert_id));
    }
}

function getSimilarAdverts($advert_id){
    $advert = Node::load($advert_id);
    $signature = $advert->get('field_advert_signature')->value;
    $output = '<p class="duplicate-refs">';
    if (isset($signature) and !empty($signature)){
        $advertsQuery = \Drupal::entityQuery('node')
          ->condition('type', 'advert')
          ->condition('status', Node::PUBLISHED)
          ->condition('nid', $advert_id, '<>')
          ->condition('field_advert_signature', $signature, '=');
        $advert_ids = $advertsQuery->execute();
        if (count($advert_ids) > 0){
            $adverts = Node::loadMultiple($advert_ids);
            foreach ($adverts as $advert){
                $output .= $advert->get('field_advert_reference')->value . '<br>';
            }
        } else {
            $output .= t('None');
        }
    } else {
        $output .= t('None');
    }
    $output .= '</p>';
    return $output;
}